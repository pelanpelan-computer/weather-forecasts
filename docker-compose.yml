# name: weatherapp

# services:
#   db:
#     image: postgres:17
#     container_name: weather-db
#     environment:
#       POSTGRES_DB: ${DATABASE_NAME}
#       POSTGRES_USER: ${DATABASE_USERNAME}
#       POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
#     env_file:
#       - ./.env
#     ports:
#       - '5432:5432'
#     volumes:
#       - pg_data:/var/lib/postgresql/data

#   backend:
#     build:
#       context: ./testbackend
#       args:
#         ENVIRONMENT: 'development'
#     # command: uv run manage.py runserver 0.0.0.0:8000
#     container_name: weather-app
#     ports:
#       - '8000:8000'
#     environment:
#       DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
#       DEBUG: ${DEBUG}
#       DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
#       DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
#       DATABASE_ENGINE: ${DATABASE_ENGINE}
#       DATABASE_NAME: ${DATABASE_NAME}
#       DATABASE_USERNAME: ${DATABASE_USERNAME}
#       DATABASE_PASSWORD: ${DATABASE_PASSWORD}
#       DATABASE_HOST: ${DATABASE_HOST}
#       DATABASE_PORT: ${DATABASE_PORT}
#     env_file:
#       - ./.env
#     depends_on:
#       - db
#     volumes:
#       - ./testbackend/:/app

# volumes:
#   pg_data:

name: weatherapp
services:
  db:
    image: postgres:17
    restart: unless-stopped
    volumes:
      - pg_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  web:
    build: ./testbackend
    command: >
      sh -c "uv run python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./testbackend/:/app/
    ports:
      - 8000:8000
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
    env_file:
      - ./.env
    depends_on:
      - db
    restart: unless-stopped

volumes:
  pg_data: